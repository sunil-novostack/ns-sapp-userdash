{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Layout, AccountConnection, Link, Form, FormLayout } from '@shopify/polaris';\n\nvar SettingForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(SettingForm, _React$Component);\n\n  var _super = _createSuper(SettingForm);\n\n  function SettingForm(props) {\n    var _this;\n\n    _classCallCheck(this, SettingForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      connected: false\n    };\n    return _this;\n  }\n\n  _createClass(SettingForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsx(Form, {\n        children: /*#__PURE__*/_jsx(FormLayout, {\n          children: /*#__PURE__*/_jsx(Layout.AnnotatedSection, {\n            title: \"Connected User\",\n            description: \"Connect to your shopify ac with custom Dashboard\",\n            children: this.accountConnectionMarkup()\n          })\n        })\n      });\n    }\n  }, {\n    key: \"toggleConnection\",\n    value: function toggleConnection() {\n      this.setState(function (_ref) {\n        var connected = _ref.connected;\n        return {\n          connected: !connected\n        };\n      });\n    }\n  }, {\n    key: \"accountConnectionMarkup\",\n    value: function accountConnectionMarkup() {\n      return this.state.connected ? /*#__PURE__*/_jsx(AccountConnection, {\n        avatarUrl: \"#\",\n        accountName: \"Carbojet\",\n        details: \"thisthat.shopify.com\",\n        action: {\n          content: 'Disconnected',\n          onAction: this.toggleConnection.bind(this)\n        },\n        connected: this.state.connected\n      }) : /*#__PURE__*/_jsx(AccountConnection, {\n        title: \"Connct To Shop\",\n        action: {\n          content: 'Connect',\n          onAction: this.toggleConnection.bind(this)\n        },\n        details: \"No Account Connected\",\n        connected: this.state.connected,\n        termsOfService: /*#__PURE__*/_jsxs(\"p\", {\n          children: [\"By Clicking Connect, You are agree to accept our terms and condition's \", /*#__PURE__*/_jsx(Link, {\n            url: \"#\",\n            children: \"Terms And Conditions\"\n          }), \" Its Completly Free to Use\"]\n        })\n      });\n    }\n  }]);\n\n  return SettingForm;\n}(React.Component);\n\nexport { SettingForm as default };","map":null,"metadata":{},"sourceType":"module"}